#!/bin/sh

DOTFILES_PATH=`pwd`

info() {
  echo "  [ \033[00;34m..\033[0m ] $1"
}

user() {
  printf "\r         $1 "
}

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo
  exit
}

configure_git() {
  info 'Configure Git'

  user '- Git User Name?'
  read -e git_user_name
  user '- Git User Email?'
  read -e git_user_email

  sed -e "s/GITUSERNAME/$git_user_name/g" \
  -e "s/GITUSEREMAIL/$git_user_email/g" \
  -e "s,DOTFILESPATH,$DOTFILES_PATH,g" \
  git/gitconfig.example > git/.gitconfig.symlink

  success 'Configure Git'
}

run_installers() {
  info 'Installers'

  for source in `find $DOTFILES_PATH -maxdepth 2 -name \*.installer`; do
    source $source
  done

  success 'Installers'
}

link_files() {
  ln -s $1 $2
  success "Linked $1 to $2"
}

install_dotfiles() {
  info 'Install Dotfiles'

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in `find $DOTFILES_PATH -maxdepth 2 -name \*.symlink`; do
    dest="$HOME/`basename \"${source%.*}\"`"

    if [ -f $dest ] || [ -d $dest ]; then
      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]; then
        user "`basename $source` exists: [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]; then
        rm -rf $dest
        success "Replaced $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]; then
        mv $dest $dest\.backup
        success "Moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]; then
        link_files $source $dest
      else
        success "Skipped $source"
      fi

    else
      link_files $source $dest
    fi

  done

  success 'Install Dotfiles'
}

set -e
echo

configure_git
install_dotfiles

echo
echo '  Awwwww Yeaahh!'
echo
